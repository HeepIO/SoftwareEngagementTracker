<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Apis.Firestore.v1beta1</name>
    </assembly>
    <members>
        <member name="T:Google.Apis.Firestore.v1beta1.FirestoreService">
            <summary>The Firestore Service.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreService.Version">
            <summary>The API version.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreService.DiscoveryVersionUsed">
            <summary>The discovery version used to generate this service.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.FirestoreService.#ctor">
            <summary>Constructs a new service.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.FirestoreService.#ctor(Google.Apis.Services.BaseClientService.Initializer)">
            <summary>Constructs a new service.</summary>
            <param name="initializer">The service initializer.</param>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreService.Features">
            <summary>Gets the service supported features.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreService.Name">
            <summary>Gets the service name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreService.BaseUri">
            <summary>Gets the service base URI.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreService.BasePath">
            <summary>Gets the service base path.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreService.BatchUri">
            <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreService.BatchPath">
            <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.FirestoreService.Scope">
            <summary>Available OAuth 2.0 scopes for use with the Cloud Firestore API.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreService.Scope.CloudPlatform">
            <summary>View and manage your data across Google Cloud Platform services</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreService.Scope.Datastore">
            <summary>View and manage your Google Cloud Datastore data</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreService.Projects">
            <summary>Gets the Projects resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1">
            <summary>A base abstract class for Firestore requests.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new FirestoreBaseServiceRequest instance.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.Xgafv">
            <summary>V1 error format.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.XgafvEnum">
            <summary>V1 error format.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.XgafvEnum.Value1">
            <summary>v1 error format</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.XgafvEnum.Value2">
            <summary>v2 error format</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.AccessToken">
            <summary>OAuth access token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.Alt">
            <summary>Data format for response.</summary>
            [default: json]
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.AltEnum">
            <summary>Data format for response.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.AltEnum.Json">
            <summary>Responses with Content-Type of application/json</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.AltEnum.Media">
            <summary>Media download with context-dependent Content-Type</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.AltEnum.Proto">
            <summary>Responses with Content-Type of application/x-protobuf</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.BearerToken">
            <summary>OAuth bearer token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.Callback">
            <summary>JSONP</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.Fields">
            <summary>Selector specifying which fields to include in a partial response.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.Key">
            <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
            Required unless you provide an OAuth 2.0 token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.OauthToken">
            <summary>OAuth 2.0 token for the current user.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.Pp">
            <summary>Pretty-print response.</summary>
            [default: true]
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.PrettyPrint">
            <summary>Returns response with indentations and line breaks.</summary>
            [default: true]
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.QuotaUser">
            <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
            assigned to a user, but should not exceed 40 characters.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.UploadType">
            <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.UploadProtocol">
            <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.FirestoreBaseServiceRequest`1.InitParameters">
            <summary>Initializes Firestore parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource">
            <summary>The "projects" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.ProjectsResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.Databases">
            <summary>Gets the Databases resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource">
            <summary>The "databases" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.Documents">
            <summary>Gets the Documents resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource">
            <summary>The "documents" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGet(Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest,System.String)">
             <summary>Gets multiple documents.
            
             Documents returned by this method are not guaranteed to be returned in the same order that they were
             requested.</summary>
             <param name="body">The body of the request.</param>
             <param name="database">The database name. In the format:
             `projects/{project_id}/databases/{database_id}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest">
             <summary>Gets multiple documents.
            
             Documents returned by this method are not guaranteed to be returned in the same order that they were
             requested.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest,System.String)">
            <summary>Constructs a new BatchGet request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.Database">
            <summary>The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BatchGetRequest.InitParameters">
            <summary>Initializes BatchGet parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransaction(Google.Apis.Firestore.v1beta1.Data.BeginTransactionRequest,System.String)">
            <summary>Starts a new transaction.</summary>
            <param name="body">The body of the request.</param>
            <param name="database">The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest">
            <summary>Starts a new transaction.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.BeginTransactionRequest,System.String)">
            <summary>Constructs a new BeginTransaction request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.Database">
            <summary>The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.BeginTransactionRequest.InitParameters">
            <summary>Initializes BeginTransaction parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.Commit(Google.Apis.Firestore.v1beta1.Data.CommitRequest,System.String)">
            <summary>Commits a transaction, while optionally updating documents.</summary>
            <param name="body">The body of the request.</param>
            <param name="database">The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest">
            <summary>Commits a transaction, while optionally updating documents.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.CommitRequest,System.String)">
            <summary>Constructs a new Commit request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.Database">
            <summary>The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CommitRequest.InitParameters">
            <summary>Initializes Commit parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocument(Google.Apis.Firestore.v1beta1.Data.Document,System.String,System.String)">
            <summary>Creates a new document.</summary>
            <param name="body">The body of the request.</param>
            <param name="parent">The parent resource. For example: `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/chatrooms/{chatroom_id}`</param>
            <param
            name="collectionId">The collection ID, relative to `parent`, to list. For example: `chatrooms`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest">
            <summary>Creates a new document.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.Document,System.String,System.String)">
            <summary>Constructs a new CreateDocument request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.Parent">
            <summary>The parent resource. For example:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/chatrooms/{chatroom_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.CollectionId">
            <summary>The collection ID, relative to `parent`, to list. For example: `chatrooms`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.MaskFieldPaths">
            <summary>The list of field paths in the mask. See Document.fields for a field path syntax
            reference.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.DocumentId">
             <summary>The client-assigned document ID to use for this document.
            
             Optional. If not specified, an ID will be assigned by the service.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.CreateDocumentRequest.InitParameters">
            <summary>Initializes CreateDocument parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.Delete(System.String)">
            <summary>Deletes a document.</summary>
            <param name="name">The resource name of the Document to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest">
            <summary>Deletes a document.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Delete request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.Name">
            <summary>The resource name of the Document to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.CurrentDocumentExists">
            <summary>When set to `true`, the target document must exist. When set to `false`, the target
            document must not exist.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.CurrentDocumentUpdateTime">
            <summary>When set, the target document must exist and have been last updated at that
            time.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.DeleteRequest.InitParameters">
            <summary>Initializes Delete parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.Get(System.String)">
            <summary>Gets a single document.</summary>
            <param name="name">The resource name of the Document to get. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest">
            <summary>Gets a single document.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.Name">
            <summary>The resource name of the Document to get. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.Transaction">
            <summary>Reads the document in a transaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.MaskFieldPaths">
            <summary>The list of field paths in the mask. See Document.fields for a field path syntax
            reference.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.ReadTime">
            <summary>Reads the version of the document at the given time. This may not be older than 60
            seconds.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.List(System.String,System.String)">
            <summary>Lists documents.</summary>
            <param name="parent">The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example: `projects/my-
            project/databases/my-database/documents` or `projects/my-project/databases/my-database/documents/chatrooms/my-
            chatroom`</param>
            <param name="collectionId">The collection ID, relative to `parent`, to list. For example:
            `chatrooms` or `messages`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest">
            <summary>Lists documents.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.Parent">
            <summary>The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example:
            `projects/my-project/databases/my-database/documents` or `projects/my-project/databases/my-
            database/documents/chatrooms/my-chatroom`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.CollectionId">
            <summary>The collection ID, relative to `parent`, to list. For example: `chatrooms` or
            `messages`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.ReadTime">
            <summary>Reads documents as they were at the given time. This may not be older than 60
            seconds.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.OrderBy">
            <summary>The order to sort results by. For example: `priority desc, name`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.ShowMissing">
             <summary>If the list should show missing documents. A missing document is a document that does
             not exist but has sub-documents. These documents will be returned with a key but will not have
             fields, Document.create_time, or Document.update_time set.
            
             Requests with `show_missing` may not specify `where` or `order_by`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.PageToken">
            <summary>The `next_page_token` value returned from a previous List request, if any.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.MaskFieldPaths">
            <summary>The list of field paths in the mask. See Document.fields for a field path syntax
            reference.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.PageSize">
            <summary>The maximum number of documents to return.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.Transaction">
            <summary>Reads documents in a transaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIds(Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsRequest,System.String)">
            <summary>Lists all the collection IDs underneath a document.</summary>
            <param name="body">The body of the request.</param>
            <param name="parent">The parent document. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example: `projects/my-
            project/databases/my-database/documents/chatrooms/my-chatroom`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest">
            <summary>Lists all the collection IDs underneath a document.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsRequest,System.String)">
            <summary>Constructs a new ListCollectionIds request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.Parent">
            <summary>The parent document. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example:
            `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListCollectionIdsRequest.InitParameters">
            <summary>Initializes ListCollectionIds parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.Listen(Google.Apis.Firestore.v1beta1.Data.ListenRequest,System.String)">
            <summary>Listens to changes.</summary>
            <param name="body">The body of the request.</param>
            <param name="database">The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest">
            <summary>Listens to changes.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.ListenRequest,System.String)">
            <summary>Constructs a new Listen request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.Database">
            <summary>The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.ListenRequest.InitParameters">
            <summary>Initializes Listen parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.Patch(Google.Apis.Firestore.v1beta1.Data.Document,System.String)">
            <summary>Updates or inserts a document.</summary>
            <param name="body">The body of the request.</param>
            <param name="name">The resource name of the document, for example
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest">
            <summary>Updates or inserts a document.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.Document,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.Name">
            <summary>The resource name of the document, for example
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.CurrentDocumentExists">
            <summary>When set to `true`, the target document must exist. When set to `false`, the target
            document must not exist.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.UpdateMaskFieldPaths">
            <summary>The list of field paths in the mask. See Document.fields for a field path syntax
            reference.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.MaskFieldPaths">
            <summary>The list of field paths in the mask. See Document.fields for a field path syntax
            reference.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.CurrentDocumentUpdateTime">
            <summary>When set, the target document must exist and have been last updated at that
            time.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.Rollback(Google.Apis.Firestore.v1beta1.Data.RollbackRequest,System.String)">
            <summary>Rolls back a transaction.</summary>
            <param name="body">The body of the request.</param>
            <param name="database">The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest">
            <summary>Rolls back a transaction.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.RollbackRequest,System.String)">
            <summary>Constructs a new Rollback request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.Database">
            <summary>The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RollbackRequest.InitParameters">
            <summary>Initializes Rollback parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQuery(Google.Apis.Firestore.v1beta1.Data.RunQueryRequest,System.String)">
            <summary>Runs a query.</summary>
            <param name="body">The body of the request.</param>
            <param name="parent">The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example: `projects/my-
            project/databases/my-database/documents` or `projects/my-project/databases/my-database/documents/chatrooms/my-
            chatroom`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest">
            <summary>Runs a query.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.RunQueryRequest,System.String)">
            <summary>Constructs a new RunQuery request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.Parent">
            <summary>The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example:
            `projects/my-project/databases/my-database/documents` or `projects/my-project/databases/my-
            database/documents/chatrooms/my-chatroom`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.RunQueryRequest.InitParameters">
            <summary>Initializes RunQuery parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.Write(Google.Apis.Firestore.v1beta1.Data.WriteRequest,System.String)">
            <summary>Streams batches of document updates and deletes, in order.</summary>
            <param name="body">The body of the request.</param>
            <param name="database">The database name. In the format: `projects/{project_id}/databases/{database_id}`. This is
            only required in the first message.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest">
            <summary>Streams batches of document updates and deletes, in order.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.WriteRequest,System.String)">
            <summary>Constructs a new Write request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.Database">
            <summary>The database name. In the format: `projects/{project_id}/databases/{database_id}`. This
            is only required in the first message.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.DocumentsResource.WriteRequest.InitParameters">
            <summary>Initializes Write parameter list.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.Indexes">
            <summary>Gets the Indexes resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource">
            <summary>The "indexes" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.Create(Google.Apis.Firestore.v1beta1.Data.Index,System.String)">
             <summary>Creates the specified index. A newly created index's initial state is `CREATING`. On
             completion of the returned google.longrunning.Operation, the state will be `READY`. If the index
             already exists, the call will return an `ALREADY_EXISTS` status.
            
             During creation, the process could result in an error, in which case the index will move to the
             `ERROR` state. The process can be recovered by fixing the data that caused the error, removing the
             index with delete, then re-creating the index with create.
            
             Indexes with a single field cannot be created.</summary>
             <param name="body">The body of the request.</param>
             <param name="parent">The name of the database this index will apply to. For example:
             `projects/{project_id}/databases/{database_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest">
             <summary>Creates the specified index. A newly created index's initial state is `CREATING`. On
             completion of the returned google.longrunning.Operation, the state will be `READY`. If the index
             already exists, the call will return an `ALREADY_EXISTS` status.
            
             During creation, the process could result in an error, in which case the index will move to the
             `ERROR` state. The process can be recovered by fixing the data that caused the error, removing the
             index with delete, then re-creating the index with create.
            
             Indexes with a single field cannot be created.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1beta1.Data.Index,System.String)">
            <summary>Constructs a new Create request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.Parent">
            <summary>The name of the database this index will apply to. For example:
            `projects/{project_id}/databases/{database_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.CreateRequest.InitParameters">
            <summary>Initializes Create parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.Delete(System.String)">
            <summary>Deletes an index.</summary>
            <param name="name">The index name. For example:
            `projects/{project_id}/databases/{database_id}/indexes/{index_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.DeleteRequest">
            <summary>Deletes an index.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.DeleteRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Delete request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.DeleteRequest.Name">
            <summary>The index name. For example:
            `projects/{project_id}/databases/{database_id}/indexes/{index_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.DeleteRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.DeleteRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.DeleteRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.DeleteRequest.InitParameters">
            <summary>Initializes Delete parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.Get(System.String)">
            <summary>Gets an index.</summary>
            <param name="name">The name of the index. For example:
            `projects/{project_id}/databases/{database_id}/indexes/{index_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.GetRequest">
            <summary>Gets an index.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.GetRequest.Name">
            <summary>The name of the index. For example:
            `projects/{project_id}/databases/{database_id}/indexes/{index_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.List(System.String)">
            <summary>Lists the indexes that match the specified filters.</summary>
            <param name="parent">The database name. For example: `projects/{project_id}/databases/{database_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest">
            <summary>Lists the indexes that match the specified filters.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.Parent">
            <summary>The database name. For example:
            `projects/{project_id}/databases/{database_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.PageToken">
            <summary>The standard List page token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.PageSize">
            <summary>The standard List page size.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1beta1.ProjectsResource.DatabasesResource.IndexesResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ArrayValue">
            <summary>An array value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ArrayValue.Values">
            <summary>Values in the array.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ArrayValue.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest">
            <summary>The request for Firestore.BatchGetDocuments.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest.Documents">
            <summary>The names of the documents to retrieve. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. The request will fail if any of
            the document is not a child resource of the given `database`. Duplicate names will be elided.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest.Mask">
             <summary>The fields to return. If not set, returns all fields.
            
             If a document has a field that is not present in this mask, that field will not be returned in the
             response.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest.NewTransaction">
            <summary>Starts a new transaction and reads the documents. Defaults to a read-only transaction. The new
            transaction ID will be returned as the first response in the stream.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest.ReadTime">
            <summary>Reads documents as they were at the given time. This may not be older than 60 seconds.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest.Transaction">
            <summary>Reads documents in a transaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsResponse">
            <summary>The streamed response for Firestore.BatchGetDocuments.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsResponse.Found">
            <summary>A document that was requested.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsResponse.Missing">
            <summary>A document name that was requested but does not exist. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsResponse.ReadTime">
            <summary>The time at which the document was read. This may be monotically increasing, in this case the
            previous documents in the result stream are guaranteed not to have changed between their read_time and this
            one.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsResponse.Transaction">
            <summary>The transaction that was started as part of this request. Will only be set in the first response,
            and only if BatchGetDocumentsRequest.new_transaction was set in the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BatchGetDocumentsResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.BeginTransactionRequest">
            <summary>The request for Firestore.BeginTransaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BeginTransactionRequest.Options">
            <summary>The options for the transaction. Defaults to a read-write transaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BeginTransactionRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.BeginTransactionResponse">
            <summary>The response for Firestore.BeginTransaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BeginTransactionResponse.Transaction">
            <summary>The transaction that was started.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.BeginTransactionResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.CollectionSelector">
            <summary>A selection of a collection, such as `messages as m1`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CollectionSelector.AllDescendants">
            <summary>When false, selects only collections that are immediate children of the `parent` specified in the
            containing `RunQueryRequest`. When true, selects all descendant collections.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CollectionSelector.CollectionId">
            <summary>The collection ID. When set, selects only collections with this ID.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CollectionSelector.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.CommitRequest">
            <summary>The request for Firestore.Commit.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CommitRequest.Transaction">
            <summary>If set, applies all writes in this transaction, and commits it.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CommitRequest.Writes">
             <summary>The writes to apply.
            
             Always executed atomically and in order.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CommitRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.CommitResponse">
            <summary>The response for Firestore.Commit.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CommitResponse.CommitTime">
            <summary>The time at which the commit occurred.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CommitResponse.WriteResults">
             <summary>The result of applying the writes.
            
             This i-th write result corresponds to the i-th write in the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CommitResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.CompositeFilter">
            <summary>A filter that merges multiple other filters using the given operator.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CompositeFilter.Filters">
            <summary>The list of filters to combine. Must contain at least one filter.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CompositeFilter.Op">
            <summary>The operator for combining multiple filters.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.CompositeFilter.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Cursor">
            <summary>A position in a query result set.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Cursor.Before">
            <summary>If the position is just before or just after the given values, relative to the sort order defined
            by the query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Cursor.Values">
             <summary>The values that represent a position, in the order they appear in the order by clause of a query.
            
             Can contain fewer values than specified in the order by clause.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Cursor.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Document">
             <summary>A Firestore document.
            
             Must not exceed 1 MiB - 4 bytes.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Document.CreateTime">
             <summary>Output only. The time at which the document was created.
            
             This value increases monotonically when a document is deleted then recreated. It can also be compared to
             values from other documents and the `read_time` of a query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Document.Fields">
             <summary>The document's fields.
            
             The map keys represent field names.
            
             A simple field name contains only characters `a` to `z`, `A` to `Z`, `0` to `9`, or `_`, and must not start
             with `0` to `9`. For example, `foo_bar_17`.
            
             Field names matching the regular expression `__.*__` are reserved. Reserved field names are forbidden except
             in certain documented contexts. The map keys, represented as UTF-8, must not exceed 1,500 bytes and cannot
             be empty.
            
             Field paths may be used in other contexts to refer to structured fields defined here. For `map_value`, the
             field path is represented by the simple or quoted field names of the containing fields, delimited by `.`.
             For example, the structured field `"foo" : { map_value: { "x" : { string_value: "hello" }}}` would be
             represented by the field path `foo.x`.
            
             Within a field path, a quoted field name starts and ends with `` ` `` and may contain any character. Some
             characters, including `` ` ``, must be escaped using a `\`. For example, `` `x` `` represents `x` and ``
             `bak\`tik` `` represents `` bak`tik ``.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Document.Name">
            <summary>The resource name of the document, for example
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Document.UpdateTime">
             <summary>Output only. The time at which the document was last changed.
            
             This value is initially set to the `create_time` then increases monotonically with each change to the
             document. It can also be compared to values from other documents and the `read_time` of a query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Document.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.DocumentChange">
             <summary>A Document has changed.
            
             May be the result of multiple writes, including deletes, that ultimately resulted in a new value for the
             Document.
            
             Multiple DocumentChange messages may be returned for the same logical change, if multiple targets are
             affected.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentChange.Document">
             <summary>The new state of the Document.
            
             If `mask` is set, contains only fields that were updated or added.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentChange.RemovedTargetIds">
            <summary>A set of target IDs for targets that no longer match this document.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentChange.TargetIds">
            <summary>A set of target IDs of targets that match this document.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentChange.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.DocumentDelete">
             <summary>A Document has been deleted.
            
             May be the result of multiple writes, including updates, the last of which deleted the Document.
            
             Multiple DocumentDelete messages may be returned for the same logical delete, if multiple targets are
             affected.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentDelete.Document">
            <summary>The resource name of the Document that was deleted.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentDelete.ReadTime">
             <summary>The read timestamp at which the delete was observed.
            
             Greater or equal to the `commit_time` of the delete.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentDelete.RemovedTargetIds">
            <summary>A set of target IDs for targets that previously matched this entity.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentDelete.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.DocumentMask">
            <summary>A set of field paths on a document. Used to restrict a get or update operation on a document to a
            subset of its fields. This is different from standard field masks, as this is always scoped to a Document, and
            takes in account the dynamic nature of Value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentMask.FieldPaths">
            <summary>The list of field paths in the mask. See Document.fields for a field path syntax
            reference.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.DocumentRemove">
             <summary>A Document has been removed from the view of the targets.
            
             Sent if the document is no longer relevant to a target and is out of view. Can be sent instead of a
             DocumentDelete or a DocumentChange if the server can not send the new value of the document.
            
             Multiple DocumentRemove messages may be returned for the same logical write or delete, if multiple targets are
             affected.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentRemove.Document">
            <summary>The resource name of the Document that has gone out of view.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentRemove.ReadTime">
             <summary>The read timestamp at which the remove was observed.
            
             Greater or equal to the `commit_time` of the change/delete/remove.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentRemove.RemovedTargetIds">
            <summary>A set of target IDs for targets that previously matched this document.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentRemove.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.DocumentTransform">
            <summary>A transformation of a document.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentTransform.Document">
            <summary>The name of the document to transform.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentTransform.FieldTransforms">
            <summary>The list of transformations to apply to the fields of the document, in order. This must not be
            empty.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentTransform.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.DocumentsTarget">
            <summary>A target specified by a set of documents names.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentsTarget.Documents">
            <summary>The names of the documents to retrieve. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`. The request will fail if any of
            the document is not a child resource of the given `database`. Duplicate names will be elided.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.DocumentsTarget.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Empty">
             <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
             typical example is to use it as the request or the response type of an API method. For instance:
            
             service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
            
             The JSON representation for `Empty` is empty JSON object `{}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Empty.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ExistenceFilter">
            <summary>A digest of all the documents that match a given target.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ExistenceFilter.Count">
             <summary>The total count of documents that match target_id.
            
             If different from the count of documents in the client that match, the client must manually determine which
             documents no longer match the target.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ExistenceFilter.TargetId">
            <summary>The target ID to which this filter applies.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ExistenceFilter.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.FieldFilter">
            <summary>A filter on a specific field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldFilter.Field">
            <summary>The field to filter by.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldFilter.Op">
            <summary>The operator to filter by.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldFilter.Value">
            <summary>The value to compare to.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldFilter.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.FieldReference">
            <summary>A reference to a field, such as `max(messages.time) as max_time`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldReference.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.FieldTransform">
            <summary>A transformation of a field of the document.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldTransform.FieldPath">
            <summary>The path of the field. See Document.fields for the field path syntax reference.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldTransform.SetToServerValue">
            <summary>Sets the field to the given server value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.FieldTransform.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Filter">
            <summary>A filter.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Filter.CompositeFilter">
            <summary>A composite filter.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Filter.FieldFilter">
            <summary>A filter on a document field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Filter.UnaryFilter">
            <summary>A filter that takes exactly one argument.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Filter.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Index">
            <summary>An index definition.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Index.CollectionId">
            <summary>The collection ID to which this index applies. Required.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Index.Fields">
            <summary>The fields to index.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Index.Name">
            <summary>The resource name of the index. Output only.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Index.State">
            <summary>The state of the index. Output only.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Index.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.IndexField">
            <summary>A field of an index.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.IndexField.FieldPath">
            <summary>The path of the field. Must match the field path specification described by
            google.firestore.v1beta1.Document.fields. Special field path `__name__` may be used by itself or at the end
            of a path. `__type__` may be used only at the end of path.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.IndexField.Mode">
            <summary>The field's mode.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.IndexField.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.LatLng">
            <summary>An object representing a latitude/longitude pair. This is expressed as a pair of doubles representing
            degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard.
            Values must be within normalized ranges.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.LatLng.Latitude">
            <summary>The latitude in degrees. It must be in the range [-90.0, +90.0].</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.LatLng.Longitude">
            <summary>The longitude in degrees. It must be in the range [-180.0, +180.0].</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.LatLng.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsRequest">
            <summary>The request for Firestore.ListCollectionIds.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsRequest.PageSize">
            <summary>The maximum number of results to return.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsRequest.PageToken">
            <summary>A page token. Must be a value from ListCollectionIdsResponse.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsResponse">
            <summary>The response from Firestore.ListCollectionIds.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsResponse.CollectionIds">
            <summary>The collection ids.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsResponse.NextPageToken">
            <summary>A page token that may be used to continue the list.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListCollectionIdsResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ListDocumentsResponse">
            <summary>The response for Firestore.ListDocuments.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListDocumentsResponse.Documents">
            <summary>The Documents found.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListDocumentsResponse.NextPageToken">
            <summary>The next page token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListDocumentsResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ListIndexesResponse">
            <summary>The response for FirestoreAdmin.ListIndexes.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListIndexesResponse.Indexes">
            <summary>The indexes.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListIndexesResponse.NextPageToken">
            <summary>The standard List next-page token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListIndexesResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ListenRequest">
            <summary>A request for Firestore.Listen</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenRequest.AddTarget">
            <summary>A target to add to this stream.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenRequest.Labels">
            <summary>Labels associated with this target change.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenRequest.RemoveTarget">
            <summary>The ID of a target to remove from this stream.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ListenResponse">
            <summary>The response for Firestore.Listen.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenResponse.DocumentChange">
            <summary>A Document has changed.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenResponse.DocumentDelete">
            <summary>A Document has been deleted.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenResponse.DocumentRemove">
            <summary>A Document has been removed from a target (because it is no longer relevant to that
            target).</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenResponse.Filter">
             <summary>A filter to apply to the set of documents previously returned for the given target.
            
             Returned when documents may have been removed from the given target, but the exact documents are
             unknown.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenResponse.TargetChange">
            <summary>Targets have changed.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ListenResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.MapValue">
            <summary>A map value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.MapValue.Fields">
             <summary>The map's fields.
            
             The map keys represent field names. Field names matching the regular expression `__.*__` are reserved.
             Reserved field names are forbidden except in certain documented contexts. The map keys, represented as
             UTF-8, must not exceed 1,500 bytes and cannot be empty.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.MapValue.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Operation">
            <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Operation.Done">
            <summary>If the value is `false`, it means the operation is still in progress. If `true`, the operation is
            completed, and either `error` or `response` is available.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Operation.Error">
            <summary>The error result of the operation in case of failure or cancellation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Operation.Metadata">
            <summary>Service-specific metadata associated with the operation.  It typically contains progress
            information and common metadata such as create time. Some services might not provide such metadata.  Any
            method that returns a long-running operation should document the metadata type, if any.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Operation.Name">
            <summary>The server-assigned name, which is only unique within the same service that originally returns it.
            If you use the default HTTP mapping, the `name` should have the format of
            `operations/some/unique/name`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Operation.Response">
            <summary>The normal response of the operation in case of success.  If the original method returns no data on
            success, such as `Delete`, the response is `google.protobuf.Empty`.  If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource.  For other methods, the response should have
            the type `XxxResponse`, where `Xxx` is the original method name.  For example, if the original method name
            is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Operation.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Order">
            <summary>An order on a field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Order.Direction">
            <summary>The direction to order by. Defaults to `ASCENDING`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Order.Field">
            <summary>The field to order by.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Order.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Precondition">
            <summary>A precondition on a document, used for conditional operations.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Precondition.Exists">
            <summary>When set to `true`, the target document must exist. When set to `false`, the target document must
            not exist.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Precondition.UpdateTime">
            <summary>When set, the target document must exist and have been last updated at that time.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Precondition.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Projection">
            <summary>The projection of document's fields to return.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Projection.Fields">
             <summary>The fields to return.
            
             If empty, all fields are returned. To only return the name of the document, use `['__name__']`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Projection.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.QueryTarget">
            <summary>A target specified by a query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.QueryTarget.Parent">
            <summary>The parent resource name. In the format: `projects/{project_id}/databases/{database_id}/documents`
            or `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example: `projects/my-
            project/databases/my-database/documents` or `projects/my-project/databases/my-database/documents/chatrooms
            /my-chatroom`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.QueryTarget.StructuredQuery">
            <summary>A structured query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.QueryTarget.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ReadOnly">
            <summary>Options for a transaction that can only be used to read documents.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ReadOnly.ReadTime">
            <summary>Reads documents at the given time. This may not be older than 60 seconds.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ReadOnly.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.ReadWrite">
            <summary>Options for a transaction that can be used to read and write documents.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ReadWrite.RetryTransaction">
            <summary>An optional transaction to retry.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.ReadWrite.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.RollbackRequest">
            <summary>The request for Firestore.Rollback.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RollbackRequest.Transaction">
            <summary>The transaction to roll back.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RollbackRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.RunQueryRequest">
            <summary>The request for Firestore.RunQuery.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryRequest.NewTransaction">
            <summary>Starts a new transaction and reads the documents. Defaults to a read-only transaction. The new
            transaction ID will be returned as the first response in the stream.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryRequest.ReadTime">
            <summary>Reads documents as they were at the given time. This may not be older than 60 seconds.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryRequest.StructuredQuery">
            <summary>A structured query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryRequest.Transaction">
            <summary>Reads documents in a transaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.RunQueryResponse">
            <summary>The response for Firestore.RunQuery.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryResponse.Document">
            <summary>A query result. Not set when reporting partial progress.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryResponse.ReadTime">
             <summary>The time at which the document was read. This may be monotonically increasing; in this case, the
             previous documents in the result stream are guaranteed not to have changed between their `read_time` and
             this one.
            
             If the query returns no results, a response with `read_time` and no `document` will be sent, and this
             represents the time at which the query was run.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryResponse.SkippedResults">
            <summary>The number of results that have been skipped due to an offset between the last response and the
            current response.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryResponse.Transaction">
            <summary>The transaction that was started as part of this request. Can only be set in the first response,
            and only if RunQueryRequest.new_transaction was set in the request. If set, no other fields will be set in
            this response.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.RunQueryResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Status">
             <summary>The `Status` type defines a logical error model that is suitable for different programming
             environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model
             is designed to be:
            
             - Simple to use and understand for most users - Flexible enough to meet unexpected needs
            
             # Overview
            
             The `Status` message contains three pieces of data: error code, error message, and error details. The error code
             should be an enum value of google.rpc.Code, but it may accept additional error codes if needed.  The error
             message should be a developer-facing English message that helps developers *understand* and *resolve* the error.
             If a localized user-facing error message is needed, put the localized message in the error details or localize
             it in the client. The optional error details may contain arbitrary information about the error. There is a
             predefined set of error detail types in the package `google.rpc` that can be used for common error conditions.
            
             # Language mapping
            
             The `Status` message is the logical representation of the error model, but it is not necessarily the actual wire
             format. When the `Status` message is exposed in different client libraries and different wire protocols, it can
             be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped
             to some error codes in C.
            
             # Other uses
            
             The error model and the `Status` message can be used in a variety of environments, either with or without APIs,
             to provide a consistent developer experience across different environments.
            
             Example uses of this error model include:
            
             - Partial errors. If a service needs to return partial errors to the client, it may embed the `Status` in the
             normal response to indicate the partial errors.
            
             - Workflow errors. A typical workflow has multiple steps. Each step may have a `Status` message for error
             reporting.
            
             - Batch operations. If a client uses batch request and batch response, the `Status` message should be used
             directly inside batch response, one for each error sub-response.
            
             - Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of
             those operations should be represented directly using the `Status` message.
            
             - Logging. If some API errors are stored in logs, the message `Status` could be used directly after any
             stripping needed for security/privacy reasons.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Status.Code">
            <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Status.Details">
            <summary>A list of messages that carry the error details.  There is a common set of message types for APIs
            to use.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Status.Message">
            <summary>A developer-facing error message, which should be in English. Any user-facing error message should
            be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Status.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.StructuredQuery">
            <summary>A Firestore query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.EndAt">
            <summary>A end point for the query results.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.From">
            <summary>The collections to query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.Limit">
             <summary>The maximum number of results to return.
            
             Applies after all other constraints. Must be >= 0 if specified.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.Offset">
             <summary>The number of results to skip.
            
             Applies before limit, but after all other constraints. Must be >= 0 if specified.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.OrderBy">
             <summary>The order to apply to the query results.
            
             Firestore guarantees a stable ordering through the following rules:
            
             * Any field required to appear in `order_by`, that is not already specified in `order_by`, is appended to
             the order in field name order by default. * If an order on `__name__` is not specified, it is appended by
             default.
            
             Fields are appended with the same sort direction as the last order specified, or 'ASCENDING' if no order was
             specified. For example:
            
             * `SELECT * FROM Foo ORDER BY A` becomes `SELECT * FROM Foo ORDER BY A, __name__` * `SELECT * FROM Foo ORDER
             BY A DESC` becomes `SELECT * FROM Foo ORDER BY A DESC, __name__ DESC` * `SELECT * FROM Foo WHERE A > 1`
             becomes `SELECT * FROM Foo WHERE A > 1 ORDER BY A, __name__`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.Select">
            <summary>The projection to return.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.StartAt">
            <summary>A starting point for the query results.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.Where">
            <summary>The filter to apply.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.StructuredQuery.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Target">
            <summary>A specification of a set of documents to listen to.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Target.Documents">
            <summary>A target specified by a set of document names.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Target.Once">
            <summary>If the target should be removed once it is current and consistent.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Target.Query">
            <summary>A target specified by a query.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Target.ReadTime">
             <summary>Start listening after a specific `read_time`.
            
             The client must know the state of matching documents at this time.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Target.ResumeToken">
             <summary>A resume token from a prior TargetChange for an identical target.
            
             Using a resume token with a different target is unsupported and may fail.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Target.TargetId">
             <summary>A client provided target ID.
            
             If not set, the server will assign an ID for the target.
            
             Used for resuming a target without changing IDs. The IDs can either be client-assigned or be server-assigned
             in a previous stream. All targets with client provided IDs must be added before adding a target that needs a
             server-assigned id.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Target.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.TargetChange">
            <summary>Targets being watched have changed.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TargetChange.Cause">
            <summary>The error that resulted in this change, if applicable.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TargetChange.ReadTime">
             <summary>The consistent `read_time` for the given `target_ids` (omitted when the target_ids are not at a
             consistent snapshot).
            
             The stream is guaranteed to send a `read_time` with `target_ids` empty whenever the entire stream reaches a
             new consistent snapshot. ADD, CURRENT, and RESET messages are guaranteed to (eventually) result in a new
             consistent snapshot (while NO_CHANGE and REMOVE messages are not).
            
             For a given stream, `read_time` is guaranteed to be monotonically increasing.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TargetChange.ResumeToken">
             <summary>A token that can be used to resume the stream for the given `target_ids`, or all targets if
             `target_ids` is empty.
            
             Not set on every target change.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TargetChange.TargetChangeType">
            <summary>The type of change that occurred.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TargetChange.TargetIds">
             <summary>The target IDs of targets that have changed.
            
             If empty, the change applies to all targets.
            
             For `target_change_type=ADD`, the order of the target IDs matches the order of the requests to add the
             targets. This allows clients to unambiguously associate server-assigned target IDs with added targets.
            
             For other states, the order of the target IDs is not defined.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TargetChange.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.TransactionOptions">
            <summary>Options for creating a new transaction.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TransactionOptions.ReadOnly__">
            <summary>The transaction can only be used for read operations.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TransactionOptions.ReadWrite">
            <summary>The transaction can be used for both read and write operations.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.TransactionOptions.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.UnaryFilter">
            <summary>A filter with a single operand.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.UnaryFilter.Field">
            <summary>The field to which to apply the operator.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.UnaryFilter.Op">
            <summary>The unary operator to apply.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.UnaryFilter.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Value">
            <summary>A message that can hold any of the supported value types.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.ArrayValue">
             <summary>An array value.
            
             Cannot directly contain another array value, though can contain an map which contains another
             array.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.BooleanValue">
            <summary>A boolean value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.BytesValue">
             <summary>A bytes value.
            
             Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.DoubleValue">
            <summary>A double value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.GeoPointValue">
            <summary>A geo point value representing a point on the surface of Earth.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.IntegerValue">
            <summary>An integer value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.MapValue">
            <summary>A map value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.NullValue">
            <summary>A null value.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.ReferenceValue">
            <summary>A reference to a document. For example:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.StringValue">
             <summary>A string value.
            
             The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes of the UTF-8
             representation are considered by queries.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.TimestampValue">
             <summary>A timestamp value.
            
             Precise only to microseconds. When stored, any additional precision is rounded down.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Value.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.Write">
            <summary>A write on a document.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Write.CurrentDocument">
             <summary>An optional precondition on the document.
            
             The write will fail if this is set and not met by the target document.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Write.Delete">
            <summary>A document name to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Write.Transform">
            <summary>Applies a tranformation to a document. At most one `transform` per document is allowed in a given
            request. An `update` cannot follow a `transform` on the same document in a given request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Write.Update">
            <summary>A document to write.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Write.UpdateMask">
             <summary>The fields to update in this write.
            
             This field can be set only when the operation is `update`. If the mask is not set for an `update` and the
             document exists, any existing data will be overwritten. If the mask is set and the document on the server
             has fields not covered by the mask, they are left unchanged. Fields referenced in the mask, but not present
             in the input document, are deleted from the document on the server. The field paths in this mask must not
             contain a reserved field name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.Write.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.WriteRequest">
             <summary>The request for Firestore.Write.
            
             The first request creates a stream, or resumes an existing one from a token.
            
             When creating a new stream, the server replies with a response containing only an ID and a token, to use in the
             next request.
            
             When resuming a stream, the server first streams any responses later than the given token, then a response
             containing only an up-to-date token, to use in the next request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteRequest.Labels">
            <summary>Labels associated with this write request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteRequest.StreamId">
            <summary>The ID of the write stream to resume. This may only be set in the first message. When left empty, a
            new write stream will be created.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteRequest.StreamToken">
             <summary>A stream token that was previously sent by the server.
            
             The client should set this field to the token from the most recent WriteResponse it has received. This
             acknowledges that the client has received responses up to this token. After sending this token, earlier
             tokens may not be used anymore.
            
             The server may close the stream if there are too many unacknowledged responses.
            
             Leave this field unset when creating a new stream. To resume a stream at a specific point, set this field
             and the `stream_id` field.
            
             Leave this field unset when creating a new stream.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteRequest.Writes">
             <summary>The writes to apply.
            
             Always executed atomically and in order. This must be empty on the first request. This may be empty on the
             last request. This must not be empty on all other requests.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.WriteResponse">
            <summary>The response for Firestore.Write.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResponse.CommitTime">
            <summary>The time at which the commit occurred.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResponse.StreamId">
            <summary>The ID of the stream. Only set on the first message, when a new stream was created.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResponse.StreamToken">
             <summary>A token that represents the position of this response in the stream. This can be used by a client
             to resume the stream at this point.
            
             This field is always set.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResponse.WriteResults">
             <summary>The result of applying the writes.
            
             This i-th write result corresponds to the i-th write in the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1beta1.Data.WriteResult">
            <summary>The result of applying a write.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResult.TransformResults">
            <summary>The results of applying each DocumentTransform.FieldTransform, in the same order.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResult.UpdateTime">
             <summary>The last update time of the document after applying the write. Not set after a `delete`.
            
             If the write did not actually change the document, this will be the previous update_time.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1beta1.Data.WriteResult.ETag">
            <summary>The ETag of the item.</summary>
        </member>
    </members>
</doc>
